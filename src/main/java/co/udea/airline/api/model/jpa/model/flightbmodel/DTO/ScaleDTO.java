package co.udea.airline.api.model.jpa.model.flightbmodel.DTO;

import co.udea.airline.api.model.jpa.model.flightbmodel.AirplaneModel;
import co.udea.airline.api.model.jpa.model.flightbmodel.Airport;
import com.fasterxml.jackson.annotation.JsonFormat;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.NotEmpty;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import java.time.LocalDateTime;


@Setter
@Getter
@ToString
@Data
/**
 * Represents a scale data transfer object (DTO).
 * This class contains information about a scale, including the airplane model, origin and destination airports, departure and arrival dates.
 */
public class ScaleDTO {
    /**
     * Unique identifier of the scale.
     */
    @Schema(description = "Unique identifier of the scale, is autogenerated.",requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    private Long scaleId;
    /**
     * Airplane model used for the scale.
     */
    @NotEmpty(message = "The airplane model is required.")
    private AirplaneModel airplaneModel;
    /**
     * Origin airport of the scale.
     */
    @NotEmpty(message = "The origin airport is required.")
    private Airport originAirport;
    /**
     * Destination airport of the scale.
     */
    @NotEmpty(message = "The destination airport is required.")
    private Airport destinationAirport;
    /**
     * Departure date of the scale.
     */
    @NotEmpty(message = "The departure date is required.")
    @Schema(description = "Departure date of the scale.", requiredMode = Schema.RequiredMode.REQUIRED, example = "2021-10-10 10:00:00")
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime departureDate;
    /**
     * Arrival date of the scale.
     */
    @NotEmpty(message = "The arrival date is required.")
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @Schema(description = "Arrival date of the scale.", requiredMode = Schema.RequiredMode.REQUIRED, example = "2021-10-10 12:00:00")
    private LocalDateTime arrivalDate;
}
